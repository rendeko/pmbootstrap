# Kernel config based on: arch/arm/configs/(CHANGEME!)

pkgname="linux-kobo-aura"
pkgver=2.6.35.3
pkgrel=1
pkgdesc="Aura kernel fork"
arch="armhf"
_carch="arm"
_flavor="kobo-aura"
url="https://github.com/marek-g/kobo-kernel-2.6.35.3-marek"
license="GPL2"
options="!strip !check !tracedeps"
makedepends="perl sed installkernel bash gmp-dev bc linux-headers elfutils-dev"
HOSTCC="${CC:-gcc}"
HOSTCC="${HOSTCC#${CROSS_COMPILE}}"

# Source
_repository="kobo-kernel-2.6.35.3-marek"
_commit="70889a3c6208c94abfab0eb90cfff3ccea3b3579"
_config="config-${_flavor}.${arch}"
source="
	$pkgname-$_commit.tar.gz::https://github.com/marek-g/${_repository}/archive/${_commit}.tar.gz
	$_config
	compiler-gcc6.h
	00_fix_return_address.patch
	03_support_for_gcc5.patch
"
builddir="$srcdir/${_repository}-${_commit}"

prepare() {
	default_prepare

	# gcc6 support
	cp -v "$srcdir/compiler-gcc6.h" "$builddir/include/linux/"

	# Remove -Werror from all makefiles
	local i
	local makefiles="$(find . -type f -name Makefile)
		$(find . -type f -name Kbuild)"
	for i in $makefiles; do
		sed -i 's/-Werror-/-W/g' "$i"
		sed -i 's/-Werror//g' "$i"
	done

	# Prepare kernel config ('yes ""' for kernels lacking olddefconfig)
	cp "$srcdir"/$_config "$builddir"/.config
	yes "" | make ARCH="$_carch" HOSTCC="$HOSTCC" oldconfig
}

menuconfig() {
	cd "$builddir"
	make ARCH="$_carch" menuconfig
	cp .config "$startdir"/$_config
}

build() {
	unset LDFLAGS
	make ARCH="$_carch" CC="${CC:-gcc}" \
		KBUILD_BUILD_VERSION="$((pkgrel + 1 ))-postmarketOS"
}

package() {
	# kernel.release
	install -D "$builddir/include/config/kernel.release" \
		"$pkgdir/usr/share/kernel/$_flavor/kernel.release"

	# zImage (find the right one)
	cd "$builddir/arch/$_carch/boot"
	_target="$pkgdir/boot/vmlinuz-$_flavor"
	for _zimg in zImage-dtb Image.gz-dtb *zImage Image; do
		[ -e "$_zimg" ] || continue
		msg "zImage found: $_zimg"
		install -Dm644 "$_zimg" "$_target"
		break
	done
	if ! [ -e "$_target" ]; then
		error "Could not find zImage in $PWD!"
		return 1
	fi
}

sha512sums="33848cda3597b650057fc204f849c17c364a90c7661feb6e00542db579a74bebfba2531ac247362f3d7265a17c688cd08f6319b4266e342f2697053deb340350  linux-kobo-aura-70889a3c6208c94abfab0eb90cfff3ccea3b3579.tar.gz
2c2f1df7467454bcab38e9f0d323747033a1c40a43521d432180f1c53128cac235fa04ba965bd405e79f1fa840066ab75bc69e69fcf232f78d52bed9e885d0fb  config-kobo-aura.armhf
d80980e9474c82ba0ef1a6903b434d8bd1b092c40367ba543e72d2c119301c8b2d05265740e4104ca1ac5d15f6c4aa49e8776cb44264a9a28dc551e0d1850dcc  compiler-gcc6.h
ea1d3b5a234fa565e3c1a792de48f4fc4e6023d281d303c8e319c7ef28edc5739ab0e4dea0139a41f0a5c7d03e27921ccaa214fd0ac5c72245a094ce60128864  00_fix_return_address.patch
1c10e73696384ffa4661959a60232c2c82fae8c993a1afbaf17601bafa35654b8f7d8d6fe216e6a3265061f8e25e6e8d2dbc0c1ff60e2fb39a6c6cd752e2488e  03_support_for_gcc5.patch"
